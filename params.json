{"name":"Loopback-ng-boilerplate","tagline":"An application skeleton for a typical Loopback+AngularJS web app using ng-boilerplate","body":"#loopback-ng-boilerplate\r\n\r\nThis project is an application skeleton for a typical __Loopback+AngularJS__ web app, which you can use\r\nto quickly bootstrap your own projects. It brings together [Loopback](http://loopback.io) and\r\n[ng-boilerplate](https://joshdmiller.github.io/ng-boilerplate).\r\n\r\n##Quick Start\r\n\r\n__Note:__ Hopefully, you have your environment set up such that you don't need sudo to do `npm` anything\r\nbut if not, just add sudo where appropriate.\r\n\r\n```shell\r\nmkdir myApp && cd myApp\r\ngit clone https://carlodicelico.github.com/loopback-ng-boilerplate .\r\ncd server && npm install\r\ncd ../client && npm install && bower install\r\ngrunt watch\r\n```\r\n\r\nIn a new terminal tab/pane/window from your project's root, do:\r\n\r\n```shell\r\nnode server/app\r\n```\r\n\r\nGo to [http://localhost:3000](http://localhost:3000). You'll probably also want to change the\r\nnames `myApp` and `ngBoilerplate` to your own app's name throughout at some point.\r\n\r\n##Structure\r\n\r\nThe project is set up with two completely independent directories - `/client` and `/server`. They're\r\nboth already set up with individual `.gitignore` files, so that you can split these up into\r\ntwo separate git repos if you prefer. If not, feel free to remove them and just use the one in the\r\nproject root.\r\n\r\nIn `/client`, `grunt-loopback-angular` and `grunt-docular` have been installed and a grunt task called\r\n`loopback` registered in `Gruntfile.js`. The `loopback` task has been added to `default` so that besides\r\nbeing available via `grunt loopback`, it will automatically run when you do `grunt`. An initial\r\n`lb-services.js` file has been generated and injected as a dependency of the angular app.\r\n\r\nIn `/server` is a barebones Loopback API. There's nothing more here than whatever is normally generated\r\nby `slc lb project myApp` except that `app.js` has been set up to serve the AngularJS app when `/` is\r\nrequested. By default, Loopback will look for the `index.html` file in `/client/build`, where your\r\nAngular sources will be located in development, and automatically serve it to the client. To switch\r\nto production mode, just comment out the two `// DEVELOPMENT` sections and uncomment the two\r\n`// PRODUCTION` sections in `/server/app.js`:\r\n\r\n```javascript\r\n// The static file server should come after all other routes\r\n// Every request that goes through the static middleware hits\r\n// the file system to check if a file exists.\r\n\r\n// PRODUCTION\r\n// app.use(loopback.static(path.join(__dirname, '..', 'client', 'bin')));\r\n\r\n// DEVELOPMENT\r\napp.use(loopback.static(path.join(__dirname, '..', 'client', 'build')));\r\n\r\n// Requests that don't match any of the above should be sent to\r\n// index, where we'll handle them using HTML5 history (Angular client)\r\n\r\n// PRODUCTION\r\n// app.use(function(req, res) {\r\n//   res.sendfile(path.join(__dirname, '..', 'client', 'bin', 'index.html'));\r\n// });\r\n\r\n// DEVELOPMENT\r\napp.use(function(req, res) {\r\n  res.sendfile(path.join(__dirname, '..', 'client', 'build', 'index.html'));\r\n});\r\n```\r\n\r\n##Usage\r\n\r\nTo work on the whole application, you'll need two terminal or tmux windows/tabs/panes - one for the\r\nclient and one for the server. In the client tab, just run `grunt watch` and your sources will be\r\nbuilt and tests run. In the server tab, just run `node server/app` and Loopback will serve the sources\r\nfrom the `/client/build` directory. In this way, you can have the Loopback API and client-side grunt\r\ntasks running simultaneously.\r\n\r\nIf you want to work on the client-side app only, you can do so just as you normally would with\r\n`ng-boilerplate` - run `grunt watch` and open `file:///path/to/client/build/index.html` in your browser.\r\n\r\nWhen you're ready to deploy, you can do `grunt compile` and `node ../server/app`, do a quick\r\nonce-over, and push according to your deployment or CI process. All you need to push to production is `/server`\r\nand `/client/bin`.\r\n\r\nFor information specific to [Loopback](http://loopback.io) or\r\n[ng-boilerplate](https://joshdmiller.github.io/ng-boilerplate), see their respective documentation.\r\nA lot of great documentation is included in various README files throughout the `/client` if you're\r\nnot familiar with ng-boilerplate.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}